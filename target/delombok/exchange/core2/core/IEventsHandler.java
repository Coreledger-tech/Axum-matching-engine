// Generated by delombok at Thu Nov 14 21:27:17 PST 2024
package exchange.core2.core;

import exchange.core2.core.common.OrderAction;
import exchange.core2.core.common.api.ApiCommand;
import exchange.core2.core.common.cmd.CommandResultCode;
import java.util.List;

/**
 * Convenient events handler interface for non latency-critical applications.<br>
 * Custom handler implementation should be attached to SimpleEventProcessor.<br>
 * Handler method are invoked from single thread in following order:
 * <table summary="execution order">
 * <tr><td>1. </td><td> commandResult</td></tr>
 * <tr><td>2A.  </td><td> optional reduceEvent <td> optional tradeEvent</td></tr>
 * <tr><td>2B. </td><td> <td>optional rejectEvent</td></tr>
 * <tr><td>3. </td><td> orderBook - mandatory for ApiOrderBookRequest, optional for other commands</td></tr>
 * </table>
 * Events processing will stop immediately if any handler throws an exception - you should consider wrapping logic into try-catch block if necessary.
 */
public interface IEventsHandler {
    /**
     * Method is called after each commands execution.
     *
     * @param commandResult - immutable object describing original command, result code, and assigned sequence number.
     */
    void commandResult(ApiCommandResult commandResult);

    /**
     * Method is called if order execution was resulted to one or more trades.
     *
     * @param tradeEvent - immutable object describing event details
     */
    void tradeEvent(TradeEvent tradeEvent);

    /**
     * Method is called if IoC order was not possible to match with provided price limit.
     *
     * @param rejectEvent - immutable object describing event details
     */
    void rejectEvent(RejectEvent rejectEvent);

    /**
     * Method is called if Cancel or Reduce command was successfully executed.
     *
     * @param reduceEvent - immutable object describing event details
     */
    void reduceEvent(ReduceEvent reduceEvent);

    /**
     * Method is called when order book snapshot (L2MarketData) was attached to commands by matching engine.
     * That always happens for ApiOrderBookRequest, sometimes for other commands.
     *
     * @param orderBook - immutable object containing L2 OrderBook snapshot
     */
    void orderBook(OrderBook orderBook);


    class ApiCommandResult {
        public final ApiCommand command;
        public final CommandResultCode resultCode;
        public final long seq;

        @java.lang.SuppressWarnings("all")
        public ApiCommandResult(final ApiCommand command, final CommandResultCode resultCode, final long seq) {
            this.command = command;
            this.resultCode = resultCode;
            this.seq = seq;
        }

        @java.lang.SuppressWarnings("all")
        public ApiCommand getCommand() {
            return this.command;
        }

        @java.lang.SuppressWarnings("all")
        public CommandResultCode getResultCode() {
            return this.resultCode;
        }

        @java.lang.SuppressWarnings("all")
        public long getSeq() {
            return this.seq;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof IEventsHandler.ApiCommandResult)) return false;
            final IEventsHandler.ApiCommandResult other = (IEventsHandler.ApiCommandResult) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            final java.lang.Object this$command = this.getCommand();
            final java.lang.Object other$command = other.getCommand();
            if (this$command == null ? other$command != null : !this$command.equals(other$command)) return false;
            final java.lang.Object this$resultCode = this.getResultCode();
            final java.lang.Object other$resultCode = other.getResultCode();
            if (this$resultCode == null ? other$resultCode != null : !this$resultCode.equals(other$resultCode)) return false;
            if (this.getSeq() != other.getSeq()) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof IEventsHandler.ApiCommandResult;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            final java.lang.Object $command = this.getCommand();
            result = result * PRIME + ($command == null ? 43 : $command.hashCode());
            final java.lang.Object $resultCode = this.getResultCode();
            result = result * PRIME + ($resultCode == null ? 43 : $resultCode.hashCode());
            final long $seq = this.getSeq();
            result = result * PRIME + (int) ($seq >>> 32 ^ $seq);
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "IEventsHandler.ApiCommandResult(command=" + this.getCommand() + ", resultCode=" + this.getResultCode() + ", seq=" + this.getSeq() + ")";
        }
    }


    class TradeEvent {
        public final int symbol;
        public final long totalVolume;
        public final long takerOrderId;
        public final long takerUid;
        public final OrderAction takerAction;
        public final boolean takeOrderCompleted;
        public final long timestamp;
        public final List<Trade> trades;

        @java.lang.SuppressWarnings("all")
        public TradeEvent(final int symbol, final long totalVolume, final long takerOrderId, final long takerUid, final OrderAction takerAction, final boolean takeOrderCompleted, final long timestamp, final List<Trade> trades) {
            this.symbol = symbol;
            this.totalVolume = totalVolume;
            this.takerOrderId = takerOrderId;
            this.takerUid = takerUid;
            this.takerAction = takerAction;
            this.takeOrderCompleted = takeOrderCompleted;
            this.timestamp = timestamp;
            this.trades = trades;
        }

        @java.lang.SuppressWarnings("all")
        public int getSymbol() {
            return this.symbol;
        }

        @java.lang.SuppressWarnings("all")
        public long getTotalVolume() {
            return this.totalVolume;
        }

        @java.lang.SuppressWarnings("all")
        public long getTakerOrderId() {
            return this.takerOrderId;
        }

        @java.lang.SuppressWarnings("all")
        public long getTakerUid() {
            return this.takerUid;
        }

        @java.lang.SuppressWarnings("all")
        public OrderAction getTakerAction() {
            return this.takerAction;
        }

        @java.lang.SuppressWarnings("all")
        public boolean isTakeOrderCompleted() {
            return this.takeOrderCompleted;
        }

        @java.lang.SuppressWarnings("all")
        public long getTimestamp() {
            return this.timestamp;
        }

        @java.lang.SuppressWarnings("all")
        public List<Trade> getTrades() {
            return this.trades;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof IEventsHandler.TradeEvent)) return false;
            final IEventsHandler.TradeEvent other = (IEventsHandler.TradeEvent) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            if (this.getSymbol() != other.getSymbol()) return false;
            if (this.getTotalVolume() != other.getTotalVolume()) return false;
            if (this.getTakerOrderId() != other.getTakerOrderId()) return false;
            if (this.getTakerUid() != other.getTakerUid()) return false;
            final java.lang.Object this$takerAction = this.getTakerAction();
            final java.lang.Object other$takerAction = other.getTakerAction();
            if (this$takerAction == null ? other$takerAction != null : !this$takerAction.equals(other$takerAction)) return false;
            if (this.isTakeOrderCompleted() != other.isTakeOrderCompleted()) return false;
            if (this.getTimestamp() != other.getTimestamp()) return false;
            final java.lang.Object this$trades = this.getTrades();
            final java.lang.Object other$trades = other.getTrades();
            if (this$trades == null ? other$trades != null : !this$trades.equals(other$trades)) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof IEventsHandler.TradeEvent;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            result = result * PRIME + this.getSymbol();
            final long $totalVolume = this.getTotalVolume();
            result = result * PRIME + (int) ($totalVolume >>> 32 ^ $totalVolume);
            final long $takerOrderId = this.getTakerOrderId();
            result = result * PRIME + (int) ($takerOrderId >>> 32 ^ $takerOrderId);
            final long $takerUid = this.getTakerUid();
            result = result * PRIME + (int) ($takerUid >>> 32 ^ $takerUid);
            final java.lang.Object $takerAction = this.getTakerAction();
            result = result * PRIME + ($takerAction == null ? 43 : $takerAction.hashCode());
            result = result * PRIME + (this.isTakeOrderCompleted() ? 79 : 97);
            final long $timestamp = this.getTimestamp();
            result = result * PRIME + (int) ($timestamp >>> 32 ^ $timestamp);
            final java.lang.Object $trades = this.getTrades();
            result = result * PRIME + ($trades == null ? 43 : $trades.hashCode());
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "IEventsHandler.TradeEvent(symbol=" + this.getSymbol() + ", totalVolume=" + this.getTotalVolume() + ", takerOrderId=" + this.getTakerOrderId() + ", takerUid=" + this.getTakerUid() + ", takerAction=" + this.getTakerAction() + ", takeOrderCompleted=" + this.isTakeOrderCompleted() + ", timestamp=" + this.getTimestamp() + ", trades=" + this.getTrades() + ")";
        }
    }


    class Trade {
        public final long makerOrderId;
        public final long makerUid;
        public final boolean makerOrderCompleted;
        public final long price;
        public final long volume;

        @java.lang.SuppressWarnings("all")
        public Trade(final long makerOrderId, final long makerUid, final boolean makerOrderCompleted, final long price, final long volume) {
            this.makerOrderId = makerOrderId;
            this.makerUid = makerUid;
            this.makerOrderCompleted = makerOrderCompleted;
            this.price = price;
            this.volume = volume;
        }

        @java.lang.SuppressWarnings("all")
        public long getMakerOrderId() {
            return this.makerOrderId;
        }

        @java.lang.SuppressWarnings("all")
        public long getMakerUid() {
            return this.makerUid;
        }

        @java.lang.SuppressWarnings("all")
        public boolean isMakerOrderCompleted() {
            return this.makerOrderCompleted;
        }

        @java.lang.SuppressWarnings("all")
        public long getPrice() {
            return this.price;
        }

        @java.lang.SuppressWarnings("all")
        public long getVolume() {
            return this.volume;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof IEventsHandler.Trade)) return false;
            final IEventsHandler.Trade other = (IEventsHandler.Trade) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            if (this.getMakerOrderId() != other.getMakerOrderId()) return false;
            if (this.getMakerUid() != other.getMakerUid()) return false;
            if (this.isMakerOrderCompleted() != other.isMakerOrderCompleted()) return false;
            if (this.getPrice() != other.getPrice()) return false;
            if (this.getVolume() != other.getVolume()) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof IEventsHandler.Trade;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            final long $makerOrderId = this.getMakerOrderId();
            result = result * PRIME + (int) ($makerOrderId >>> 32 ^ $makerOrderId);
            final long $makerUid = this.getMakerUid();
            result = result * PRIME + (int) ($makerUid >>> 32 ^ $makerUid);
            result = result * PRIME + (this.isMakerOrderCompleted() ? 79 : 97);
            final long $price = this.getPrice();
            result = result * PRIME + (int) ($price >>> 32 ^ $price);
            final long $volume = this.getVolume();
            result = result * PRIME + (int) ($volume >>> 32 ^ $volume);
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "IEventsHandler.Trade(makerOrderId=" + this.getMakerOrderId() + ", makerUid=" + this.getMakerUid() + ", makerOrderCompleted=" + this.isMakerOrderCompleted() + ", price=" + this.getPrice() + ", volume=" + this.getVolume() + ")";
        }
    }


    class ReduceEvent {
        public final int symbol;
        public final long reducedVolume;
        public final boolean orderCompleted;
        public final long price;
        public final long orderId;
        public final long uid;
        public final long timestamp;

        @java.lang.SuppressWarnings("all")
        public ReduceEvent(final int symbol, final long reducedVolume, final boolean orderCompleted, final long price, final long orderId, final long uid, final long timestamp) {
            this.symbol = symbol;
            this.reducedVolume = reducedVolume;
            this.orderCompleted = orderCompleted;
            this.price = price;
            this.orderId = orderId;
            this.uid = uid;
            this.timestamp = timestamp;
        }

        @java.lang.SuppressWarnings("all")
        public int getSymbol() {
            return this.symbol;
        }

        @java.lang.SuppressWarnings("all")
        public long getReducedVolume() {
            return this.reducedVolume;
        }

        @java.lang.SuppressWarnings("all")
        public boolean isOrderCompleted() {
            return this.orderCompleted;
        }

        @java.lang.SuppressWarnings("all")
        public long getPrice() {
            return this.price;
        }

        @java.lang.SuppressWarnings("all")
        public long getOrderId() {
            return this.orderId;
        }

        @java.lang.SuppressWarnings("all")
        public long getUid() {
            return this.uid;
        }

        @java.lang.SuppressWarnings("all")
        public long getTimestamp() {
            return this.timestamp;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof IEventsHandler.ReduceEvent)) return false;
            final IEventsHandler.ReduceEvent other = (IEventsHandler.ReduceEvent) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            if (this.getSymbol() != other.getSymbol()) return false;
            if (this.getReducedVolume() != other.getReducedVolume()) return false;
            if (this.isOrderCompleted() != other.isOrderCompleted()) return false;
            if (this.getPrice() != other.getPrice()) return false;
            if (this.getOrderId() != other.getOrderId()) return false;
            if (this.getUid() != other.getUid()) return false;
            if (this.getTimestamp() != other.getTimestamp()) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof IEventsHandler.ReduceEvent;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            result = result * PRIME + this.getSymbol();
            final long $reducedVolume = this.getReducedVolume();
            result = result * PRIME + (int) ($reducedVolume >>> 32 ^ $reducedVolume);
            result = result * PRIME + (this.isOrderCompleted() ? 79 : 97);
            final long $price = this.getPrice();
            result = result * PRIME + (int) ($price >>> 32 ^ $price);
            final long $orderId = this.getOrderId();
            result = result * PRIME + (int) ($orderId >>> 32 ^ $orderId);
            final long $uid = this.getUid();
            result = result * PRIME + (int) ($uid >>> 32 ^ $uid);
            final long $timestamp = this.getTimestamp();
            result = result * PRIME + (int) ($timestamp >>> 32 ^ $timestamp);
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "IEventsHandler.ReduceEvent(symbol=" + this.getSymbol() + ", reducedVolume=" + this.getReducedVolume() + ", orderCompleted=" + this.isOrderCompleted() + ", price=" + this.getPrice() + ", orderId=" + this.getOrderId() + ", uid=" + this.getUid() + ", timestamp=" + this.getTimestamp() + ")";
        }
    }


    class RejectEvent {
        public final int symbol;
        public final long rejectedVolume;
        public final long price;
        public final long orderId;
        public final long uid;
        public final long timestamp;

        @java.lang.SuppressWarnings("all")
        public RejectEvent(final int symbol, final long rejectedVolume, final long price, final long orderId, final long uid, final long timestamp) {
            this.symbol = symbol;
            this.rejectedVolume = rejectedVolume;
            this.price = price;
            this.orderId = orderId;
            this.uid = uid;
            this.timestamp = timestamp;
        }

        @java.lang.SuppressWarnings("all")
        public int getSymbol() {
            return this.symbol;
        }

        @java.lang.SuppressWarnings("all")
        public long getRejectedVolume() {
            return this.rejectedVolume;
        }

        @java.lang.SuppressWarnings("all")
        public long getPrice() {
            return this.price;
        }

        @java.lang.SuppressWarnings("all")
        public long getOrderId() {
            return this.orderId;
        }

        @java.lang.SuppressWarnings("all")
        public long getUid() {
            return this.uid;
        }

        @java.lang.SuppressWarnings("all")
        public long getTimestamp() {
            return this.timestamp;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof IEventsHandler.RejectEvent)) return false;
            final IEventsHandler.RejectEvent other = (IEventsHandler.RejectEvent) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            if (this.getSymbol() != other.getSymbol()) return false;
            if (this.getRejectedVolume() != other.getRejectedVolume()) return false;
            if (this.getPrice() != other.getPrice()) return false;
            if (this.getOrderId() != other.getOrderId()) return false;
            if (this.getUid() != other.getUid()) return false;
            if (this.getTimestamp() != other.getTimestamp()) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof IEventsHandler.RejectEvent;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            result = result * PRIME + this.getSymbol();
            final long $rejectedVolume = this.getRejectedVolume();
            result = result * PRIME + (int) ($rejectedVolume >>> 32 ^ $rejectedVolume);
            final long $price = this.getPrice();
            result = result * PRIME + (int) ($price >>> 32 ^ $price);
            final long $orderId = this.getOrderId();
            result = result * PRIME + (int) ($orderId >>> 32 ^ $orderId);
            final long $uid = this.getUid();
            result = result * PRIME + (int) ($uid >>> 32 ^ $uid);
            final long $timestamp = this.getTimestamp();
            result = result * PRIME + (int) ($timestamp >>> 32 ^ $timestamp);
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "IEventsHandler.RejectEvent(symbol=" + this.getSymbol() + ", rejectedVolume=" + this.getRejectedVolume() + ", price=" + this.getPrice() + ", orderId=" + this.getOrderId() + ", uid=" + this.getUid() + ", timestamp=" + this.getTimestamp() + ")";
        }
    }


    class CommandExecutionResult {
        public final int symbol;
        public final long volume;
        public final long price;
        public final long orderId;
        public final long uid;
        public final long timestamp;

        @java.lang.SuppressWarnings("all")
        public CommandExecutionResult(final int symbol, final long volume, final long price, final long orderId, final long uid, final long timestamp) {
            this.symbol = symbol;
            this.volume = volume;
            this.price = price;
            this.orderId = orderId;
            this.uid = uid;
            this.timestamp = timestamp;
        }

        @java.lang.SuppressWarnings("all")
        public int getSymbol() {
            return this.symbol;
        }

        @java.lang.SuppressWarnings("all")
        public long getVolume() {
            return this.volume;
        }

        @java.lang.SuppressWarnings("all")
        public long getPrice() {
            return this.price;
        }

        @java.lang.SuppressWarnings("all")
        public long getOrderId() {
            return this.orderId;
        }

        @java.lang.SuppressWarnings("all")
        public long getUid() {
            return this.uid;
        }

        @java.lang.SuppressWarnings("all")
        public long getTimestamp() {
            return this.timestamp;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof IEventsHandler.CommandExecutionResult)) return false;
            final IEventsHandler.CommandExecutionResult other = (IEventsHandler.CommandExecutionResult) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            if (this.getSymbol() != other.getSymbol()) return false;
            if (this.getVolume() != other.getVolume()) return false;
            if (this.getPrice() != other.getPrice()) return false;
            if (this.getOrderId() != other.getOrderId()) return false;
            if (this.getUid() != other.getUid()) return false;
            if (this.getTimestamp() != other.getTimestamp()) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof IEventsHandler.CommandExecutionResult;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            result = result * PRIME + this.getSymbol();
            final long $volume = this.getVolume();
            result = result * PRIME + (int) ($volume >>> 32 ^ $volume);
            final long $price = this.getPrice();
            result = result * PRIME + (int) ($price >>> 32 ^ $price);
            final long $orderId = this.getOrderId();
            result = result * PRIME + (int) ($orderId >>> 32 ^ $orderId);
            final long $uid = this.getUid();
            result = result * PRIME + (int) ($uid >>> 32 ^ $uid);
            final long $timestamp = this.getTimestamp();
            result = result * PRIME + (int) ($timestamp >>> 32 ^ $timestamp);
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "IEventsHandler.CommandExecutionResult(symbol=" + this.getSymbol() + ", volume=" + this.getVolume() + ", price=" + this.getPrice() + ", orderId=" + this.getOrderId() + ", uid=" + this.getUid() + ", timestamp=" + this.getTimestamp() + ")";
        }
    }


    class OrderBook {
        public final int symbol;
        public final List<OrderBookRecord> asks;
        public final List<OrderBookRecord> bids;
        public final long timestamp;

        @java.lang.SuppressWarnings("all")
        public OrderBook(final int symbol, final List<OrderBookRecord> asks, final List<OrderBookRecord> bids, final long timestamp) {
            this.symbol = symbol;
            this.asks = asks;
            this.bids = bids;
            this.timestamp = timestamp;
        }

        @java.lang.SuppressWarnings("all")
        public int getSymbol() {
            return this.symbol;
        }

        @java.lang.SuppressWarnings("all")
        public List<OrderBookRecord> getAsks() {
            return this.asks;
        }

        @java.lang.SuppressWarnings("all")
        public List<OrderBookRecord> getBids() {
            return this.bids;
        }

        @java.lang.SuppressWarnings("all")
        public long getTimestamp() {
            return this.timestamp;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof IEventsHandler.OrderBook)) return false;
            final IEventsHandler.OrderBook other = (IEventsHandler.OrderBook) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            if (this.getSymbol() != other.getSymbol()) return false;
            final java.lang.Object this$asks = this.getAsks();
            final java.lang.Object other$asks = other.getAsks();
            if (this$asks == null ? other$asks != null : !this$asks.equals(other$asks)) return false;
            final java.lang.Object this$bids = this.getBids();
            final java.lang.Object other$bids = other.getBids();
            if (this$bids == null ? other$bids != null : !this$bids.equals(other$bids)) return false;
            if (this.getTimestamp() != other.getTimestamp()) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof IEventsHandler.OrderBook;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            result = result * PRIME + this.getSymbol();
            final java.lang.Object $asks = this.getAsks();
            result = result * PRIME + ($asks == null ? 43 : $asks.hashCode());
            final java.lang.Object $bids = this.getBids();
            result = result * PRIME + ($bids == null ? 43 : $bids.hashCode());
            final long $timestamp = this.getTimestamp();
            result = result * PRIME + (int) ($timestamp >>> 32 ^ $timestamp);
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "IEventsHandler.OrderBook(symbol=" + this.getSymbol() + ", asks=" + this.getAsks() + ", bids=" + this.getBids() + ", timestamp=" + this.getTimestamp() + ")";
        }
    }


    class OrderBookRecord {
        public final long price;
        public final long volume;
        public final int orders;

        @java.lang.SuppressWarnings("all")
        public OrderBookRecord(final long price, final long volume, final int orders) {
            this.price = price;
            this.volume = volume;
            this.orders = orders;
        }

        @java.lang.SuppressWarnings("all")
        public long getPrice() {
            return this.price;
        }

        @java.lang.SuppressWarnings("all")
        public long getVolume() {
            return this.volume;
        }

        @java.lang.SuppressWarnings("all")
        public int getOrders() {
            return this.orders;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public boolean equals(final java.lang.Object o) {
            if (o == this) return true;
            if (!(o instanceof IEventsHandler.OrderBookRecord)) return false;
            final IEventsHandler.OrderBookRecord other = (IEventsHandler.OrderBookRecord) o;
            if (!other.canEqual((java.lang.Object) this)) return false;
            if (this.getPrice() != other.getPrice()) return false;
            if (this.getVolume() != other.getVolume()) return false;
            if (this.getOrders() != other.getOrders()) return false;
            return true;
        }

        @java.lang.SuppressWarnings("all")
        protected boolean canEqual(final java.lang.Object other) {
            return other instanceof IEventsHandler.OrderBookRecord;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public int hashCode() {
            final int PRIME = 59;
            int result = 1;
            final long $price = this.getPrice();
            result = result * PRIME + (int) ($price >>> 32 ^ $price);
            final long $volume = this.getVolume();
            result = result * PRIME + (int) ($volume >>> 32 ^ $volume);
            result = result * PRIME + this.getOrders();
            return result;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "IEventsHandler.OrderBookRecord(price=" + this.getPrice() + ", volume=" + this.getVolume() + ", orders=" + this.getOrders() + ")";
        }
    }
}
