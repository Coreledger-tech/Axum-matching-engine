// Generated by delombok at Thu Nov 14 21:27:17 PST 2024
package exchange.core2.core.common.config;

import exchange.core2.core.processors.journaling.DiskSerializationProcessor;
import exchange.core2.core.processors.journaling.DiskSerializationProcessorConfiguration;
import exchange.core2.core.processors.journaling.DummySerializationProcessor;
import exchange.core2.core.processors.journaling.ISerializationProcessor;
import java.util.function.Function;

public class SerializationConfiguration {
    // no serialization
    public static final SerializationConfiguration DEFAULT = SerializationConfiguration.builder().enableJournaling(false).serializationProcessorFactory(cfg -> DummySerializationProcessor.INSTANCE).build();
    // no journaling, only snapshots
    public static final SerializationConfiguration DISK_SNAPSHOT_ONLY = SerializationConfiguration.builder().enableJournaling(false).serializationProcessorFactory(exchangeCfg -> new DiskSerializationProcessor(exchangeCfg, DiskSerializationProcessorConfiguration.createDefaultConfig())).build();
    // snapshots and journaling
    public static final SerializationConfiguration DISK_JOURNALING = SerializationConfiguration.builder().enableJournaling(true).serializationProcessorFactory(exchangeCfg -> new DiskSerializationProcessor(exchangeCfg, DiskSerializationProcessorConfiguration.createDefaultConfig())).build();
    /*
     * Enables journaling.
     * Set to false for analytics instances.
     */
    private final boolean enableJournaling;
    /*
     * Serialization processor implementations
     */
    private final Function<ExchangeConfiguration, ? extends ISerializationProcessor> serializationProcessorFactory;


    @java.lang.SuppressWarnings("all")
    public static class SerializationConfigurationBuilder {
        @java.lang.SuppressWarnings("all")
        private boolean enableJournaling;
        @java.lang.SuppressWarnings("all")
        private Function<ExchangeConfiguration, ? extends ISerializationProcessor> serializationProcessorFactory;

        @java.lang.SuppressWarnings("all")
        SerializationConfigurationBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        public SerializationConfiguration.SerializationConfigurationBuilder enableJournaling(final boolean enableJournaling) {
            this.enableJournaling = enableJournaling;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SerializationConfiguration.SerializationConfigurationBuilder serializationProcessorFactory(final Function<ExchangeConfiguration, ? extends ISerializationProcessor> serializationProcessorFactory) {
            this.serializationProcessorFactory = serializationProcessorFactory;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SerializationConfiguration build() {
            return new SerializationConfiguration(this.enableJournaling, this.serializationProcessorFactory);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "SerializationConfiguration.SerializationConfigurationBuilder(enableJournaling=" + this.enableJournaling + ", serializationProcessorFactory=" + this.serializationProcessorFactory + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static SerializationConfiguration.SerializationConfigurationBuilder builder() {
        return new SerializationConfiguration.SerializationConfigurationBuilder();
    }

    @java.lang.SuppressWarnings("all")
    public SerializationConfiguration(final boolean enableJournaling, final Function<ExchangeConfiguration, ? extends ISerializationProcessor> serializationProcessorFactory) {
        this.enableJournaling = enableJournaling;
        this.serializationProcessorFactory = serializationProcessorFactory;
    }

    @java.lang.SuppressWarnings("all")
    public boolean isEnableJournaling() {
        return this.enableJournaling;
    }

    @java.lang.SuppressWarnings("all")
    public Function<ExchangeConfiguration, ? extends ISerializationProcessor> getSerializationProcessorFactory() {
        return this.serializationProcessorFactory;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "SerializationConfiguration(enableJournaling=" + this.isEnableJournaling() + ", serializationProcessorFactory=" + this.getSerializationProcessorFactory() + ")";
    }
}
