// Generated by delombok at Thu Jul 18 00:22:06 PDT 2024
/*
 * Copyright 2019 Maksim Zheravin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package exchange.core2.core.common.api;

public final class ApiCancelOrder extends ApiCommand {
    public final long orderId;
    public final long uid;
    public final int symbol;

    @Override
    public String toString() {
        return "[CANCEL " + orderId + " u" + uid + " s" + symbol + "]";
    }


    @java.lang.SuppressWarnings("all")
    public static class ApiCancelOrderBuilder {
        @java.lang.SuppressWarnings("all")
        private long orderId;
        @java.lang.SuppressWarnings("all")
        private long uid;
        @java.lang.SuppressWarnings("all")
        private int symbol;

        @java.lang.SuppressWarnings("all")
        ApiCancelOrderBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        public ApiCancelOrder.ApiCancelOrderBuilder orderId(final long orderId) {
            this.orderId = orderId;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public ApiCancelOrder.ApiCancelOrderBuilder uid(final long uid) {
            this.uid = uid;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public ApiCancelOrder.ApiCancelOrderBuilder symbol(final int symbol) {
            this.symbol = symbol;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public ApiCancelOrder build() {
            return new ApiCancelOrder(this.orderId, this.uid, this.symbol);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "ApiCancelOrder.ApiCancelOrderBuilder(orderId=" + this.orderId + ", uid=" + this.uid + ", symbol=" + this.symbol + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static ApiCancelOrder.ApiCancelOrderBuilder builder() {
        return new ApiCancelOrder.ApiCancelOrderBuilder();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ApiCancelOrder)) return false;
        final ApiCancelOrder other = (ApiCancelOrder) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.orderId != other.orderId) return false;
        if (this.uid != other.uid) return false;
        if (this.symbol != other.symbol) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ApiCancelOrder;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final long $orderId = this.orderId;
        result = result * PRIME + (int) ($orderId >>> 32 ^ $orderId);
        final long $uid = this.uid;
        result = result * PRIME + (int) ($uid >>> 32 ^ $uid);
        result = result * PRIME + this.symbol;
        return result;
    }

    @java.lang.SuppressWarnings("all")
    public ApiCancelOrder(final long orderId, final long uid, final int symbol) {
        this.orderId = orderId;
        this.uid = uid;
        this.symbol = symbol;
    }
}
