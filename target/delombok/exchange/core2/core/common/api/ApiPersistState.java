// Generated by delombok at Wed Aug 14 23:30:16 PDT 2024
/*
 * Copyright 2019 Maksim Zheravin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package exchange.core2.core.common.api;

public final class ApiPersistState extends ApiCommand {
    public long dumpId;
    public boolean seal;

    @Override
    public String toString() {
        return "[PERSIST]-" + dumpId + " seal=" + seal;
    }

    @java.lang.SuppressWarnings("all")
    ApiPersistState(final long dumpId, final boolean seal) {
        this.dumpId = dumpId;
        this.seal = seal;
    }


    @java.lang.SuppressWarnings("all")
    public static class ApiPersistStateBuilder {
        @java.lang.SuppressWarnings("all")
        private long dumpId;
        @java.lang.SuppressWarnings("all")
        private boolean seal;

        @java.lang.SuppressWarnings("all")
        ApiPersistStateBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        public ApiPersistState.ApiPersistStateBuilder dumpId(final long dumpId) {
            this.dumpId = dumpId;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public ApiPersistState.ApiPersistStateBuilder seal(final boolean seal) {
            this.seal = seal;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public ApiPersistState build() {
            return new ApiPersistState(this.dumpId, this.seal);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "ApiPersistState.ApiPersistStateBuilder(dumpId=" + this.dumpId + ", seal=" + this.seal + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static ApiPersistState.ApiPersistStateBuilder builder() {
        return new ApiPersistState.ApiPersistStateBuilder();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ApiPersistState)) return false;
        final ApiPersistState other = (ApiPersistState) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.dumpId != other.dumpId) return false;
        if (this.seal != other.seal) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ApiPersistState;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final long $dumpId = this.dumpId;
        result = result * PRIME + (int) ($dumpId >>> 32 ^ $dumpId);
        result = result * PRIME + (this.seal ? 79 : 97);
        return result;
    }
}
